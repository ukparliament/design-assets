{"version":3,"file":"index.min.js","sources":["../../src/ts/polyfills.ts","../../src/ts/primaryNav.ts","../../src/ts/tab-accessibility.ts"],"sourcesContent":["// @ts-nocheck\r\n\r\n/**\r\n * NodeList.forEach polyfill\r\n */\r\nif (window.NodeList && !NodeList.prototype.forEach) {\r\n  NodeList.prototype.forEach = Array.prototype.forEach;\r\n}\r\n\r\n/**\r\n * Array.from() polyfill\r\n */\r\n// From https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from\r\n// Production steps of ECMA-262, Edition 6, 22.1.2.1\r\nif (!Array.from) {\r\n  Array.from = (function () {\r\n    var toStr = Object.prototype.toString;\r\n    var isCallable = function (fn) {\r\n      return typeof fn === \"function\" || toStr.call(fn) === \"[object Function]\";\r\n    };\r\n    var toInteger = function (value) {\r\n      var number = Number(value);\r\n      if (isNaN(number)) {\r\n        return 0;\r\n      }\r\n      if (number === 0 || !isFinite(number)) {\r\n        return number;\r\n      }\r\n      return (number > 0 ? 1 : -1) * Math.floor(Math.abs(number));\r\n    };\r\n    var maxSafeInteger = Math.pow(2, 53) - 1;\r\n    var toLength = function (value) {\r\n      var len = toInteger(value);\r\n      return Math.min(Math.max(len, 0), maxSafeInteger);\r\n    };\r\n\r\n    // The length property of the from method is 1.\r\n    return function from(arrayLike /*, mapFn, thisArg */) {\r\n      // 1. Let C be the this value.\r\n      var C = this;\r\n\r\n      // 2. Let items be ToObject(arrayLike).\r\n      var items = Object(arrayLike);\r\n\r\n      // 3. ReturnIfAbrupt(items).\r\n      if (arrayLike == null) {\r\n        throw new TypeError(\r\n          \"Array.from requires an array-like object - not null or undefined\"\r\n        );\r\n      }\r\n\r\n      // 4. If mapfn is undefined, then let mapping be false.\r\n      var mapFn = arguments.length > 1 ? arguments[1] : void undefined;\r\n      var T;\r\n      if (typeof mapFn !== \"undefined\") {\r\n        // 5. else\r\n        // 5. a If IsCallable(mapfn) is false, throw a TypeError exception.\r\n        if (!isCallable(mapFn)) {\r\n          throw new TypeError(\r\n            \"Array.from: when provided, the second argument must be a function\"\r\n          );\r\n        }\r\n\r\n        // 5. b. If thisArg was supplied, let T be thisArg; else let T be undefined.\r\n        if (arguments.length > 2) {\r\n          T = arguments[2];\r\n        }\r\n      }\r\n\r\n      // 10. Let lenValue be Get(items, \"length\").\r\n      // 11. Let len be ToLength(lenValue).\r\n      var len = toLength(items.length);\r\n\r\n      // 13. If IsConstructor(C) is true, then\r\n      // 13. a. Let A be the result of calling the [[Construct]] internal method\r\n      // of C with an argument list containing the single item len.\r\n      // 14. a. Else, Let A be ArrayCreate(len).\r\n      var A = isCallable(C) ? Object(new C(len)) : new Array(len);\r\n\r\n      // 16. Let k be 0.\r\n      var k = 0;\r\n      // 17. Repeat, while k < lenâ€¦ (also steps a - h)\r\n      var kValue;\r\n      while (k < len) {\r\n        kValue = items[k];\r\n        if (mapFn) {\r\n          A[k] =\r\n            typeof T === \"undefined\"\r\n              ? mapFn(kValue, k)\r\n              : mapFn.call(T, kValue, k);\r\n        } else {\r\n          A[k] = kValue;\r\n        }\r\n        k += 1;\r\n      }\r\n      // 18. Let putStatus be Put(A, \"length\", len, true).\r\n      A.length = len;\r\n      // 20. Return A.\r\n      return A;\r\n    };\r\n  })();\r\n}\r\n\r\n/**\r\n * Element.closest() polyfill\r\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/closest#Polyfill\r\n */\r\nif (!Element.prototype.closest) {\r\n  if (!Element.prototype.matches) {\r\n    Element.prototype.matches =\r\n      Element.prototype.msMatchesSelector ||\r\n      Element.prototype.webkitMatchesSelector;\r\n  }\r\n  Element.prototype.closest = function (s) {\r\n    var el = this;\r\n    var ancestor = this;\r\n    if (!document.documentElement.contains(el)) return null;\r\n    do {\r\n      if (ancestor.matches(s)) return ancestor;\r\n      ancestor = ancestor.parentElement;\r\n    } while (ancestor !== null);\r\n    return null;\r\n  };\r\n}\r\n","const NAVIGATION_CLASS = \"p-primary-nav\";\r\nconst ITEM_LI_CLASS = \"p-primary-nav__item--dropdown\";\r\nconst ITEM_A_CLASS = \"p-primary-nav__item-link\";\r\nconst SUBITEM_CLASS = \"p-primary-nav__subitem-link\";\r\nconst OPEN_CLASS = \"p-primary-nav__item--open\";\r\nconst TOGGLE_MENU_CLASS = \"p-primary-nav__toggle-menu\";\r\n\r\n/**\r\n * Adds the required JS interactivity for the PrimaryNav component\r\n */\r\nclass PrimaryNav {\r\n  /**\r\n   * @property {HTMLElement} nav The single top-level nav element\r\n   */\r\n  private readonly nav: HTMLElement | null = null;\r\n\r\n  /**\r\n   * @property {HTMLElement} toggleMenuButton The nav toggle button element to open/close the mobile menu\r\n   */\r\n  private readonly toggleMenuButton: NodeListOf<HTMLElement> | null = null;\r\n\r\n  /**\r\n   * @property {EventListener} outsideClickEventListener The event listener reference for clicking outside the nav\r\n   */\r\n  private readonly outsideClickEventListener: EventListener;\r\n\r\n  constructor() {\r\n    this.nav = document.querySelector<HTMLElement>(`.${NAVIGATION_CLASS}`);\r\n    this.toggleMenuButton = document.querySelectorAll<HTMLElement>(\r\n      `.${TOGGLE_MENU_CLASS}`\r\n    );\r\n    this.outsideClickEventListener = (e) => this.handleOutsideClick(e);\r\n\r\n    this.setupListeners();\r\n  }\r\n\r\n  /**\r\n   * Sets up the required listeners\r\n   */\r\n  private setupListeners() {\r\n    if (!this.nav) return;\r\n\r\n    const navItems = this.nav?.querySelectorAll<HTMLElement>(\r\n      `.${ITEM_LI_CLASS}`\r\n    );\r\n\r\n    navItems.forEach((item) => {\r\n      item.addEventListener(\"click\", (event) => {\r\n        const currentTarget = <HTMLElement>event?.currentTarget;\r\n        const target = <HTMLElement>event?.target;\r\n\r\n        if (target.classList.contains(SUBITEM_CLASS)) {\r\n          return;\r\n        } else {\r\n          event.preventDefault();\r\n          this.handleNavItemClick(currentTarget);\r\n        }\r\n      });\r\n    });\r\n\r\n    this.toggleMenuButton?.forEach((toggler) => {\r\n      toggler.addEventListener(\"click\", (event) =>\r\n        this.toggleMobileMenu(event)\r\n      );\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Handles the click event for the nav item\r\n   * @param navItemElement The nav item element that has been clicked upon\r\n   */\r\n  private handleNavItemClick(navItemElement: HTMLElement) {\r\n    if (!navItemElement) return;\r\n\r\n    this.closeOtherSubNavs(navItemElement);\r\n    this.toggleDropdown(navItemElement);\r\n    this.toggleAriaExpanded(navItemElement);\r\n  }\r\n\r\n  /**\r\n   * Toggles the classes for the mobile menu open and close\r\n   */\r\n  private toggleMobileMenu(event: Event) {\r\n    event.preventDefault();\r\n    this.nav?.classList.toggle(\"p-primary-nav--open\");\r\n  }\r\n\r\n  /**\r\n   * Click handler for clicking outside the navigation\r\n   * @param event The click event\r\n   */\r\n  handleOutsideClick(event: Event) {\r\n    if (!(<Element>event.target).closest(\".p-primary-nav\")) {\r\n      const navItems = this.nav?.querySelectorAll<HTMLElement>(\r\n        `.${ITEM_LI_CLASS}`\r\n      );\r\n\r\n      const navItemsArr = Array.from(navItems || []);\r\n\r\n      this.closeSubNavs(navItemsArr);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggles the OPEN_CLASS class on the clicked element\r\n   * @param navItemElement The nav item element that has been clicked upon\r\n   */\r\n  private toggleDropdown(navItemElement: Element) {\r\n    navItemElement.classList.toggle(OPEN_CLASS);\r\n\r\n    if (this.subNavIsOpen(navItemElement)) {\r\n      // If the nav is being closed, clean up the event listener to prevent memory leaks\r\n      document.removeEventListener(\"click\", this.outsideClickEventListener);\r\n    } else {\r\n      // If the nav is being opened, create an event listener\r\n      document.addEventListener(\"click\", this.outsideClickEventListener);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggles the aria-expanded attributes depending on the open/closed state of the nav item\r\n   * @param navItemElement The nav item element that has been clicked upon\r\n   */\r\n  private toggleAriaExpanded(navItemElement: Element) {\r\n    const linkElement = navItemElement.querySelector<HTMLElement>(\r\n      `.${ITEM_A_CLASS}`\r\n    );\r\n\r\n    linkElement?.setAttribute(\r\n      \"aria-expanded\",\r\n      this.subNavIsOpen(navItemElement) ? \"false\" : \"true\"\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns the current open/close status on the clicked nav item\r\n   * @param navItemElement The nav item element that has been clicked upon\r\n   */\r\n  private subNavIsOpen(navItemElement: Element): boolean {\r\n    const linkElement = navItemElement.querySelector<HTMLElement>(\r\n      `.${ITEM_A_CLASS}`\r\n    );\r\n\r\n    const isOpen = linkElement?.getAttribute(\"aria-expanded\");\r\n\r\n    if (isOpen === \"true\") {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Resets all subnavs apart from the newly clicked one to their original state\r\n   * @param navItemElement The nav item element that has been clicked upon\r\n   */\r\n  private closeOtherSubNavs(navItemElement: Element) {\r\n    if (!navItemElement.parentNode) return;\r\n\r\n    const siblings = Array.from(\r\n      navItemElement.parentNode.children\r\n    ) as HTMLElement[];\r\n\r\n    const filteredSiblings = siblings.filter(\r\n      (child) => child !== navItemElement\r\n    );\r\n\r\n    this.closeSubNavs(filteredSiblings);\r\n  }\r\n\r\n  /**\r\n   * Removes the open class and aria-expanded attribute from the subnav elements\r\n   * @param elements The subnav elements that you want to close\r\n   */\r\n  private closeSubNavs(elements: Element[]) {\r\n    elements.forEach((item) => {\r\n      const linkElement = item.querySelector<HTMLElement>(`.${ITEM_A_CLASS}`);\r\n      item.classList.remove(OPEN_CLASS);\r\n      linkElement?.setAttribute(\"aria-expanded\", \"false\");\r\n    });\r\n  }\r\n}\r\n\r\nexport default PrimaryNav;\r\n","export function setupTabAccessibility() {\n  // Event delegation to the document for a[role=\"tab\"]\n  document.addEventListener(\"keydown\", (event: KeyboardEvent) => {\n    if ((event.target as Element).matches('a[role=\"tab\"]')) {\n      const tabElement = event.target as HTMLAnchorElement;\n      const ulElement = tabElement.closest(\"ul.nav-tabs\") as HTMLElement;\n      const tabItems = ulElement.querySelectorAll('a[role=\"tab\"]');\n      if (tabItems.length === 0) return;\n\n      const activeTabElement = document.activeElement as HTMLElement;\n      const currentIndex = Array.from(tabItems).indexOf(activeTabElement);\n      if (event.key === \"ArrowRight\" || event.key === \"ArrowDown\") {\n        event.preventDefault();\n        const nextIndex = (currentIndex + 1) % tabItems.length;\n        (tabItems[nextIndex] as HTMLAnchorElement).focus();\n      } else if (event.key === \"ArrowLeft\" || event.key === \"ArrowUp\") {\n        event.preventDefault();\n        const prevIndex =\n          (currentIndex - 1 + tabItems.length) % tabItems.length;\n        (tabItems[prevIndex] as HTMLAnchorElement).focus();\n      } else if (event.key === \"Enter\" || event.key === \" \") {\n        event.preventDefault();\n        activeTabElement.click();\n      }\n    }\n  });\n}\n\nexport function initiateTabAccessibility() {\n  // Call the setupTabAccessibility function when the DOM content is loaded\n  document.addEventListener(\"DOMContentLoaded\", setupTabAccessibility);\n}\n"],"names":["toStr","isCallable","maxSafeInteger","toLength","window","NodeList","prototype","forEach","Array","from","Object","toString","fn","call","Math","pow","value","len","number","Number","isNaN","isFinite","floor","abs","toInteger","min","max","arrayLike","C","this","items","TypeError","T","mapFn","arguments","length","kValue","A","k","Element","closest","matches","msMatchesSelector","webkitMatchesSelector","s","ancestor","document","documentElement","contains","parentElement","ITEM_LI_CLASS","ITEM_A_CLASS","OPEN_CLASS","nav","querySelector","toggleMenuButton","querySelectorAll","outsideClickEventListener","e","_this","handleOutsideClick","setupListeners","PrimaryNav","item","addEventListener","event","currentTarget","target","classList","preventDefault","handleNavItemClick","toggler","toggleMobileMenu","navItemElement","closeOtherSubNavs","toggleDropdown","toggleAriaExpanded","toggle","navItems","navItemsArr","closeSubNavs","subNavIsOpen","removeEventListener","linkElement","setAttribute","getAttribute","parentNode","filteredSiblings","children","filter","child","elements","remove","setupTabAccessibility","tabItems","activeTabElement","activeElement","currentIndex","indexOf","key","focus","click"],"mappings":"uPAee,IACPA,EACAC,EAaAC,EACAC,EA1BJC,OAAOC,WAAaA,SAASC,UAAUC,UACzCF,SAASC,UAAUC,QAAUC,MAAMF,UAAUC,SAQ1CC,MAAMC,OACTD,MAAMC,MACAT,EAAQU,OAAOJ,UAAUK,SACzBV,EAAa,SAAUW,GACzB,MAAqB,mBAAPA,GAAwC,sBAAnBZ,EAAMa,KAAKD,IAY5CV,EAAiBY,KAAKC,IAAI,EAAG,IAAM,EACnCZ,EAAW,SAAUa,GACvB,IAAIC,EAZU,SAAUD,GACxB,IAAIE,EAASC,OAAOH,GACpB,OAAII,MAAMF,GACD,EAEM,IAAXA,GAAiBG,SAASH,IAGtBA,EAAS,EAAI,GAAK,GAAKJ,KAAKQ,MAAMR,KAAKS,IAAIL,IAF1CA,EAMCM,CAAUR,GACpB,OAAOF,KAAKW,IAAIX,KAAKY,IAAIT,EAAK,GAAIf,IAI7B,SAAcyB,GAEnB,IAAIC,EAAIC,KAGJC,EAAQpB,OAAOiB,GAGnB,GAAiB,MAAbA,EACF,MAAM,IAAII,UACR,oEAKJ,IACIC,EADAC,EAAQC,UAAUC,OAAS,EAAID,UAAU,QAAK,EAElD,QAAqB,IAAVD,EAAuB,CAGhC,IAAKhC,EAAWgC,GACd,MAAM,IAAIF,UACR,qEAKAG,UAAUC,OAAS,IACrBH,EAAIE,UAAU,IAkBlB,IAZA,IAWIE,EAXAnB,EAAMd,EAAS2B,EAAMK,QAMrBE,EAAIpC,EAAW2B,GAAKlB,OAAO,IAAIkB,EAAEX,IAAQ,IAAIT,MAAMS,GAGnDqB,EAAI,EAGDA,EAAIrB,GACTmB,EAASN,EAAMQ,GAEbD,EAAEC,GADAL,OAEa,IAAND,EACHC,EAAMG,EAAQE,GACdL,EAAMpB,KAAKmB,EAAGI,EAAQE,GAErBF,EAETE,GAAK,EAKP,OAFAD,EAAEF,OAASlB,EAEJoB,KASRE,QAAQjC,UAAUkC,UAChBD,QAAQjC,UAAUmC,UACrBF,QAAQjC,UAAUmC,QAChBF,QAAQjC,UAAUoC,mBAClBH,QAAQjC,UAAUqC,uBAEtBJ,QAAQjC,UAAUkC,QAAU,SAAUI,GACpC,IACIC,EAAWhB,KACf,IAAKiB,SAASC,gBAAgBC,SAFrBnB,MAEmC,OAAO,KACnD,EAAG,CACD,GAAIgB,EAASJ,QAAQG,GAAI,OAAOC,EAChCA,EAAWA,EAASI,oBACA,OAAbJ,GACT,OAAO,OCzHX,IACMK,EAAgB,gCAChBC,EAAe,2BAEfC,EAAa,yCAsBjB,aAAA,WAZiBvB,SAA0B,KAK1BA,sBAAmD,KAQlEA,KAAKwB,IAAMP,SAASQ,cAA2B,WA3B1B,kBA4BrBzB,KAAK0B,iBAAmBT,SAASU,iBAC/B,WAxBoB,+BA0BtB3B,KAAK4B,0BAA4B,SAACC,GAAM,OAAAC,EAAKC,mBAAmBF,IAEhE7B,KAAKgC,iBAoJT,OA9IUC,2BAAR,WAAA,eACOjC,KAAKwB,iBAEOxB,KAAKwB,0BAAKG,iBACzB,WAAIN,KAGG3C,SAAQ,SAACwD,GAChBA,EAAKC,iBAAiB,SAAS,SAACC,GAC9B,IAAMC,EAA6BD,MAAAA,SAAAA,EAAOC,eACdD,MAAAA,SAAAA,EAAOE,QAExBC,UAAUpB,SAhDP,iCAmDZiB,EAAMI,iBACNV,EAAKW,mBAAmBJ,oBAK9BrC,KAAK0B,iCAAkBhD,SAAQ,SAACgE,GAC9BA,EAAQP,iBAAiB,SAAS,SAACC,GACjC,OAAAN,EAAKa,iBAAiBP,WASpBH,+BAAR,SAA2BW,GACpBA,IAEL5C,KAAK6C,kBAAkBD,GACvB5C,KAAK8C,eAAeF,GACpB5C,KAAK+C,mBAAmBH,KAMlBX,6BAAR,SAAyBG,SACvBA,EAAMI,2BACNxC,KAAKwB,oBAAKe,UAAUS,OAAO,wBAO7Bf,+BAAA,SAAmBG,SACjB,IAAeA,EAAME,OAAQ3B,QAAQ,kBAAmB,CACtD,IAAMsC,YAAWjD,KAAKwB,0BAAKG,iBACzB,WAAIN,IAGA6B,EAAcvE,MAAMC,KAAKqE,GAAY,IAE3CjD,KAAKmD,aAAaD,KAQdjB,2BAAR,SAAuBW,GACrBA,EAAeL,UAAUS,OAAOzB,GAE5BvB,KAAKoD,aAAaR,GAEpB3B,SAASoC,oBAAoB,QAASrD,KAAK4B,2BAG3CX,SAASkB,iBAAiB,QAASnC,KAAK4B,4BAQpCK,+BAAR,SAA2BW,GACzB,IAAMU,EAAcV,EAAenB,cACjC,WAAIH,IAGNgC,MAAAA,GAAAA,EAAaC,aACX,gBACAvD,KAAKoD,aAAaR,GAAkB,QAAU,SAQ1CX,yBAAR,SAAqBW,GACnB,IAAMU,EAAcV,EAAenB,cACjC,WAAIH,IAKN,MAAe,UAFAgC,MAAAA,SAAAA,EAAaE,aAAa,mBAanCvB,8BAAR,SAA0BW,GACxB,GAAKA,EAAea,WAApB,CAEA,IAIMC,EAJW/E,MAAMC,KACrBgE,EAAea,WAAWE,UAGMC,QAChC,SAACC,GAAU,OAAAA,IAAUjB,KAGvB5C,KAAKmD,aAAaO,KAOZzB,yBAAR,SAAqB6B,GACnBA,EAASpF,SAAQ,SAACwD,GAChB,IAAMoB,EAAcpB,EAAKT,cAA2B,WAAIH,IACxDY,EAAKK,UAAUwB,OAAOxC,GACtB+B,MAAAA,GAAAA,EAAaC,aAAa,gBAAiB,2BClLjCS,IAEd/C,SAASkB,iBAAiB,WAAW,SAACC,GACpC,GAAKA,EAAME,OAAmB1B,QAAQ,iBAAkB,CACtD,IAEMqD,EAFa7B,EAAME,OACI3B,QAAQ,eACVgB,iBAAiB,iBAC5C,GAAwB,IAApBsC,EAAS3D,OAAc,OAE3B,IAAM4D,EAAmBjD,SAASkD,cAC5BC,EAAezF,MAAMC,KAAKqF,GAAUI,QAAQH,GAClD,GAAkB,eAAd9B,EAAMkC,KAAsC,cAAdlC,EAAMkC,IACtClC,EAAMI,iBAELyB,GADkBG,EAAe,GAAKH,EAAS3D,QACLiE,aACtC,GAAkB,cAAdnC,EAAMkC,KAAqC,YAAdlC,EAAMkC,IAAmB,CAC/DlC,EAAMI,iBAGLyB,GADEG,EAAe,EAAIH,EAAS3D,QAAU2D,EAAS3D,QACPiE,YACpB,UAAdnC,EAAMkC,KAAiC,MAAdlC,EAAMkC,MACxClC,EAAMI,iBACN0B,EAAiBM,kEAQvBvD,SAASkB,iBAAiB,mBAAoB6B"}